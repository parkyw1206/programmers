/************************************************************
 *  name : Youngwoo Park
 *  date : 09-23-2020
 *  level: l2
 *  problem source: programmers
 *  lang: C++
 *  skill: vector Pair sorting system
 * *********************************************************/
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;
int findIndex(vector<pair<int,int>> v , int wantFind){
    for(int i = 0 ; i < v.size(); i++){
        if(v[i].first == wantFind)
            return i;
    }
    return -1;
}
bool sortComp(pair<int,int> &a, pair<int,int> &b){
    return a.second > b.second;
}
vector<int> solution(string s) {
    vector<int> answer;
    vector<pair<int,int>> temp;
    string str;
    
    int index = 0;
    
    for(int i = 1 ; i < s.size() - 1 ; i++){
        if(s[i] == '}')
        {
            //cout << stoi(str) << endl;
            index = findIndex(temp, stoi(str)); 
            if(index == -1)
                temp.push_back({stoi(str),1});
            else{
                temp[index].second++;
            }
            str = "";
            i++;
        }
        else if(s[i] == ',')
        {
            //cout << stoi(str) << endl;
            index = findIndex(temp, stoi(str)); 
            if(index == -1)
                temp.push_back({stoi(str),1});
            else{
                temp[index].second++;
            }
            str = "";
        }
        else if(s[i] != '{')
        {
            str.push_back(s[i]);
        }
    }

    sort(temp.begin(), temp.end(), sortComp);
    
    for(int i = 0 ; i < temp.size() ; i++){
        answer.push_back(temp[i].first);
        //cout << temp[i].first << ", " << temp[i].second << endl;
    }
    
    return answer;
}